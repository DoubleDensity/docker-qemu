#!/bin/bash
set -e

# Start rpcbind for NFSv3 mounts
service rpcbind start

# If NFS parameters are passed in then try to mount the target
if [ -n "${NFS_EXPORT+set}" ] && [ -n "${NFS_MOUNT+set}" ]; then
    if [ -e ${NFS_MOUNT} ]; then
        echo "Attempting to mount ${NFS_EXPORT} to ${NFS_MOUNT}"
        mount -t nfs $NFS_EXPORT $NFS_MOUNT
    else
        echo "Creating ${NFS_MOUNT}"
        mkdir -p $NFS_MOUNT
        echo "Attempting to mount ${NFS_EXPORT} to ${NFS_MOUNT}"
        mount -t nfs $NFS_EXPORT $NFS_MOUNT
    fi    
fi

# main available options:
#   QEMU_CPU=n    (cores)
#   QEMU_RAM=nnn  (megabytes)
#   QEMU_HDA      (filename)
#   QEMU_HDA_SIZE (bytes, suffixes like "G" allowed)
#   QEMU_CDROM    (filename)
#   QEMU_BOOT     (-boot)
#   QEMU_PORTS="xxx[ xxx ...]" (space separated port numbers)

hostArch="$(uname -m)"
qemuArch="${QEMU_ARCH:-$hostArch}"
qemu="${QEMU_BIN:-qemu-system-$qemuArch}"
qemuArgs=()
qemuPorts=( 22 $QEMU_PORTS )

if [ -e /dev/kvm ]; then
	qemuArgs+=( -enable-kvm )
elif [ "$hostArch" = "$qemuArch" ]; then
	echo >&2
	echo >&2 'warning: /dev/kvm not found'
	echo >&2 '  PERFORMANCE WILL SUFFER'
	echo >&2 '  (hint: docker run --device /dev/kvm ...)'
	echo >&2
	sleep 3
fi

qemuArgs+=( -smp "${QEMU_CPU:-1}" )
qemuArgs+=( -m "${QEMU_RAM:-512}" )

if [ "$QEMU_HDA" ]; then
	if [ ! -f "$QEMU_HDA" -o ! -s "$QEMU_HDA" ]; then
		(
			set -x
			qemu-img create -f qcow2 -o preallocation=off "$QEMU_HDA" "$QEMU_HDA_SIZE"
		)
	fi
	# http://wiki.qemu.org/download/qemu-doc.html#Invocation
	#qemuArgs+=( -hda "$QEMU_HDA" )
	qemuArgs+=( -drive file="$QEMU_HDA",index=0,media=disk,discard=unmap )
fi

if [ "$QEMU_HDB" ]; then
	if [ ! -f "$QEMU_HDB" -o ! -s "$QEMU_HDB" ]; then
		(
			set -x
			qemu-img create -f qcow2 -o preallocation=off "$QEMU_HDB" "$QEMU_HDB_SIZE"
		)
	fi
	# http://wiki.qemu.org/download/qemu-doc.html#Invocation
	#qemuArgs+=( -hdb "$QEMU_HDA" )
	qemuArgs+=( -drive file="$QEMU_HDB",index=1,media=disk,discard=unmap )
fi

if [ "$QEMU_CDROM" ]; then
	qemuArgs+=( -cdrom "$QEMU_CDROM" )
fi

if [ "$QEMU_BOOT" ]; then
	qemuArgs+=( -boot "$QEMU_BOOT" )
fi

netArg='user'
netArg+=",hostname=$(hostname)"
for port in "${qemuPorts[@]}"; do
	netArg+=",hostfwd=tcp::$port-:$port"
	netArg+=",hostfwd=udp::$port-:$port"
done

qemuArgs+=(
	-net nic
	-net "$netArg"
	-vnc ':0'
	-serial stdio
	"$@"
)

set -x
exec "$qemu" "${qemuArgs[@]}"
